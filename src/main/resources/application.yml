spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${CLIENT_ID}
            scope:
              - profile_nickname
              - profile_image
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            client-name: Kakao
            client-authentication-method: POST
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  mail:
    host: smtp.gmail.com
    port: 587
    username: dbgudeh123
    password: ${APP_PASSWORD}
    properties:
      mail:
        smtp:
          starttls:
            enable: true
            required: true
          auth: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

  datasource:
    master:
      hikari:
        username: kty
        password: qwer1234
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.72.30/shop
    slave:
      hikari:
        username: kty
        password: qwer1234
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.72.30/shop


  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  jpa:
    hibernate:
      ddl-auto: update
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        default_batch_fetch_size: 1000
        format_sql: true
    show-sql: true

logging:
  level:
    org.springframework.security: DEBUG

jwt:
  secret-key: abcdefghijklmnopqrstuvwxyz0123456789
  token:
    expired-time-ms: 3000000

cloud:
  aws:
    s3:
      product-bucket: lonua-product
      productIntrod-bucket: lonua-productintrod
      brand-bucket: lonua-brand
    credentials:
      access-key: ${ACCESS_KEY}
      secret-key: ${SECRET_KEY}
    region:
      static: ap-northeast-2
      auto: false
    stack:
      auto: false

imp:
  imp-key: ${MY_KEY}
  imp-secret: ${MY_SECRET_KEY}